soong_config_module_type {
    name: "qtidisplay_cc_defaults",
    module_type: "cc_defaults",
    config_namespace: "qtidisplay",
    bool_variables: [
        "drmpp",
        "headless",
        "llvmsa",
        "gralloc4",
        "udfps",
        "default",
        "var3",
        "llvmcov",
        "smmu_proxy",
        "ubwcp_headers",
    ],
    properties: [
        "cflags",
        "enabled",
        "srcs",
        "header_libs",
        "host_ldlibs",
        "ldflags",
        "native_coverage",
	"vendor",
    ],
}

soong_config_module_type {
	name: "qtidisplay_prebuilt_defaults",
	module_type: "cc_defaults",
	config_namespace: "qtidisplay",
	bool_variables: [
		"var1",
		"var2",
		"var3",
	],
	properties: [
		"enabled",
	],
}

qtidisplay_prebuilt_defaults {
	name: "qtidisplay_prebuilt_var1_defaults",
	soong_config_variables: {
		var1 : {
			enabled: true,
			conditions_default: {
				enabled: false,
			},
		},
	},
}

qtidisplay_prebuilt_defaults {
	name: "qtidisplay_prebuilt_var2_defaults",
	soong_config_variables: {
		var2 : {
			enabled: true,
			conditions_default: {
				enabled: false,
			},
		},
	},
}

qtidisplay_prebuilt_defaults {
	name: "qtidisplay_prebuilt_var3_defaults",
	soong_config_variables: {
		var3 : {
			enabled: true,
			conditions_default: {
				enabled: false,
			},
		},
	},
}

qtidisplay_cc_defaults {
    name: "qtidisplay_smmu_header_defaults",
    soong_config_variables: {
        smmu_proxy: {
            header_libs: [
                "smmu_proxy_uapi_header",
            ]
        }
    }
}

qtidisplay_cc_defaults {
    name: "qtidisplay_libubwcp_header_defaults",
    soong_config_variables: {
        ubwcp_headers: {
            header_libs: [
                "libubwcp_headers",
            ]
        }
    }
}

qtidisplay_cc_defaults {
    name: "qtidisplay_common_defaults",
    cflags: [
        "-Wno-missing-field-initializers",
        "-Wall",
        "-Werror",
    ],
    shared_libs: [
        "liblog",
        "libcutils",
        "libutils",
    ],
    tidy: true,
    tidy_checks: [
        "-*",
        "cert-*",
        "-cert-dcl50-cpp",
        "bugprone-*",
        "-bugprone-lambda-function-name",
        "-bugprone-narrowing-conversions",
        "performance*",
        "-performance-no-int-to-ptr",
        "clang-analyzer-security*",
        "android-*",
        "-android-cloexec-fopen",
        "-android-cloexec-dup",
    ],
    soong_config_variables: {
        drmpp: {
            cflags: ["-DPP_DRM_ENABLE"],
        },
        headless: {
            cflags: ["-DTARGET_HEADLESS", "-DQMAA"],
        },
        llvmsa: {
            cflags: [
                "--compile-and-analyze",
                "--analyzer-perf",
            ],
        },
        gralloc4: {
            cflags: ["-DTARGET_USES_GRALLOC4"],
        },
        smmu_proxy: {
            cflags: ["-DTARGET_USES_SMMU_PROXY"],
        },
        ubwcp_headers: {
            cflags: ["-DTARGET_USES_UBWCP"],
        },
        var3 : {
            enabled: false,
            conditions_default: {
                enabled: true,
            },
        },
        udfps: {
            cflags: ["-DUDFPS_ZPOS"],
        },
    },
}

qtidisplay_cc_defaults {
    name: "qtidisplay_defaults",
    defaults: ["qtidisplay_common_defaults"],
    soong_config_variables: {
        default: {
            header_libs: ["display_headers", "qti_kernel_headers"],
        },
        headless: {
            header_libs: ["display_headers"],
            enabled: false,
            conditions_default: {
                enabled: true,
            },
        },
        llvmcov: {
            cflags: [
                "-Wl",
                "-fprofile-instr-generate",
                "-fcoverage-mapping",
                "-fprofile-instr-append-file",
                "-DPROFILE_COVERAGE_DATA",
            ],

            ldflags: [
                "-fcoverage-mapping",
                " -fprofile-instr-generate",
                "-fuse-ld=lld",
                "-gline-tables-only",
                "-fdebug-info-for-profiling",
            ],
            vendor: true,
            host_ldlibs: ["-lgcov"],
            native_coverage: true,
        },
    },
}

qtidisplay_cc_defaults {
    name: "qtidisplay_alloc_defaults",
    defaults: ["qtidisplay_common_defaults"],
    soong_config_variables: {
        llvmcov: {
            cflags: [
                "-Wl",
                "-fprofile-instr-generate",
                "-fcoverage-mapping",
                "-fprofile-instr-append-file",
                "-DPROFILE_COVERAGE_DATA"
            ],

            ldflags: [
                "-fcoverage-mapping",
                " -fprofile-instr-generate",
                "-fuse-ld=lld",
                "-gline-tables-only",
                "-fdebug-info-for-profiling",
            ],
            vendor: true,
            host_ldlibs: ["-lgcov"],
            native_coverage: true,
        },
    },
}

qtidisplay_cc_defaults {
    name: "qti_qmaa_display_defaults",
    defaults: ["qtidisplay_common_defaults"],
    header_libs: ["qmaa_display_headers"],
}

qtidisplay_cc_defaults {
    name: "qtidisplay_coverage_defaults",
    soong_config_variables: {
        llvmcov: {
            cflags: [
                "-Wl",
                "-fprofile-instr-generate",
                "-fcoverage-mapping",
                "-fprofile-instr-append-file",
                "-DPROFILE_COVERAGE_DATA"
            ],

            ldflags: [
                "-fcoverage-mapping",
                " -fprofile-instr-generate",
                "-fuse-ld=lld",
                "-gline-tables-only",
                "-fdebug-info-for-profiling",
            ],
            vendor: true,
            host_ldlibs: ["-lgcov"],
            native_coverage: true,
        },
    },
}

cc_library_headers {
    name: "display_debug_headers",
    vendor: true,
    export_include_dirs: [
        "libdebug",
    ],
}

cc_library_headers {
    name: "display_headers",
    vendor: true,
    export_include_dirs: [
        "include",
        "libdrmutils",
        "libqdutils",
        "libqservice",
        "gpu_tonemapper",
        "sdm/include",
        "gralloc",
        "libhistogram",
    ],
    header_libs: [
        "libhardware_headers",
        "display_intf_headers",
        "display_debug_headers",
    ],
    export_header_lib_headers: [
        "libhardware_headers",
        "display_intf_headers",
        "display_debug_headers",
    ],
}

cc_library_headers {
    name: "qmaa_display_headers",
    vendor: true,
    export_include_dirs: [

    ],
    header_libs: [
        "display_debug_headers",
    ],
    export_header_lib_headers: [
        "display_debug_headers",
    ],
}

subdirs = [
    "init",
    "libqservice",
    "libqdutils",
    "libddebug",
    "libdrmutils",
    "libhistogram",
    "liblight",
    "composer",
    "composer_test_service",
    "gralloc",
    "gpu_tonemapper",
    "hdmi_cec",
    "sde-drm",
    "sdm/libs/utils",
    "sdm/libs/core",
    "qmaa",
    "oem_services",
]

cc_library_headers {
    name: "smmu_proxy_uapi_header",
    vendor_available: true,
    export_include_dirs: ["smmu-proxy/include/uapi/"],
}

cc_library_headers {
    name: "libubwcp_headers",
    vendor_available: true,
    export_include_dirs: ["ubwcp/include/uapi/"],
}
